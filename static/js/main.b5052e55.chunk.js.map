{"version":3,"sources":["components/GameOver/GameOver.module.css","components/GameStart/GameStart.module.css","assets/images/hand1.svg","components/NotFound/NotFound.module.css","components/QuestionsPage/QuestionsPage.module.css","components/QuestionsPage/QuestionOptions/QuestionOptions.module.css","components/QuestionsPage/EarnedMoney/MoneyCell/MoneyCell.module.css","components/QuestionsPage/QuestionOptions/QuestionOption/QuestionOption.module.css","App.module.css","components/QuestionsPage/QuestionTitle/QuestionTitle.module.css","components/QuestionsPage/EarnedMoney/EarnedMoney.module.css","components/GameOver/GameOver.jsx","components/GameStart/GameStart.jsx","components/NotFound/NotFound.jsx","components/QuestionsPage/QuestionTitle/QuestionTitle.jsx","components/QuestionsPage/QuestionOptions/QuestionOption/QuestionOption.jsx","components/QuestionsPage/QuestionOptions/QuestionOptions.jsx","components/QuestionsPage/EarnedMoney/MoneyCell/MoneyCell.jsx","components/QuestionsPage/EarnedMoney/EarnedMoney.jsx","components/QuestionsPage/QuestionsPage.jsx","App.jsx","index.js"],"names":["module","exports","GameOver","history","useHistory","location","useLocation","useState","score","setScore","goToGameStartPage","push","useEffect","state","hasOwnProperty","className","styles","container","handImage","src","hand","alt","startingInfo","subTitle","title","type","tryAgainButton","onClick","GameStart","link","to","startButton","NotFound","finalInfo","goHomeButton","QuestionTitle","text","question","QuestionOption","option","selectAnswer","optionState","isSelected","cx","selected","viewBox","fill","xmlns","d","textAnchor","y","x","id","stroke","answerText","QuestionOptions","options","handleAnswerOptionClick","answerChecked","selectedAnswer","setSelectedAnswer","setOptionState","checkedOptionState","isCorrect","map","key","confirmButton","disabled","MoneyCell","earned","questionState","cell","EarnedMonney","currentQuestion","costs","checkAnswer","index","uuidv4","QuestionsPage","setCurrentQuestion","setAnswerChecked","goToGameOver","setTimeout","pathname","questionTitle","questions","questionText","questionOptions","answerOptions","nextQuestion","length","goToNextQuestion","cost","finalQuestionCost","earnedMoney","EarnedMoney","App","exact","from","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b5052e55.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"GameOver_container__2JglW\",\"subTitle\":\"GameOver_subTitle__2fjSr\",\"handImage\":\"GameOver_handImage__2duqg\",\"title\":\"GameOver_title__MYg1T\",\"startingInfo\":\"GameOver_startingInfo__1v5w5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"GameStart_container__3ksJc\",\"title\":\"GameStart_title__3nXnl\",\"startingInfo\":\"GameStart_startingInfo__2zl6R\",\"handImage\":\"GameStart_handImage__3q5Yx\"};","module.exports = __webpack_public_path__ + \"static/media/hand1.276b2ba6.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"NotFound_container__PScWX\",\"title\":\"NotFound_title__1Oxqn\",\"finalInfo\":\"NotFound_finalInfo__2R2lT\",\"handImage\":\"NotFound_handImage__Jjggn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"questionTitle\":\"QuestionsPage_questionTitle__35FO_\",\"questionOptions\":\"QuestionsPage_questionOptions__1hZTu\",\"earnedMoney\":\"QuestionsPage_earnedMoney__2QY8F\",\"container\":\"QuestionsPage_container__2FG7a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"QuestionOptions_container__3alOv\",\"options\":\"QuestionOptions_options__Awf7t\",\"option\":\"QuestionOptions_option__gSefd\",\"confirmButton\":\"QuestionOptions_confirmButton__2Fjli\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cell\":\"MoneyCell_cell__c-7zG\",\"active\":\"MoneyCell_active__3xDee\",\"text\":\"MoneyCell_text__3oKwp\",\"comming\":\"MoneyCell_comming__3Frd7\",\"passed\":\"MoneyCell_passed__3q_4a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"option\":\"QuestionOption_option__3iS5O\",\"selected\":\"QuestionOption_selected__1R1FV\",\"correct\":\"QuestionOption_correct__FRldZ\",\"wrong\":\"QuestionOption_wrong__28daM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"question\":\"QuestionTitle_question__uP8Xu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"EarnedMoney_container__3aHd0\"};","import React, { useEffect, useState } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport styles from './GameOver.module.css';\nimport hand from '../../assets/images/hand1.svg';\n\nconst GameOver = () => {\n  const history = useHistory();\n  const location = useLocation();\n  const [score, setScore] = useState(0);\n\n  const goToGameStartPage = () => history.push('/game-start');\n\n  useEffect(() => {\n    if (location?.state?.hasOwnProperty('score')) {\n      setScore(location.state.score);\n    } else {\n      goToGameStartPage();\n    }\n  }, [location]);\n\n  return (\n    <div className={styles.container}>\n      <img className={styles.handImage} src={hand} alt='hand' />\n      <div className={styles.startingInfo}>\n        <div>\n          <p className={styles.subTitle}> Total Score:</p>\n          <p className={styles.title}> {`$${score} earned`} </p>\n        </div>\n        <button type='button' className={styles.tryAgainButton} onClick={goToGameStartPage}>\n          Try Again\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default GameOver;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styles from './GameStart.module.css';\nimport hand from '../../assets/images/hand1.svg';\n\nconst GameStart = () => (\n  <div className={styles.container}>\n    <img className={styles.handImage} src={hand} alt='hand' />\n    <div className={styles.startingInfo}>\n      <h1 className={styles.title}>Who wants to be a millionaire?</h1>\n      <Link className={styles.link} to='/questions-page'>\n        <button type='button' className={styles.startButton}>\n          Start\n        </button>\n      </Link>\n    </div>\n  </div>\n);\n\nexport default GameStart;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport styles from './NotFound.module.css';\nimport hand from '../../assets/images/hand1.svg';\n\nconst NotFound = () => {\n  const history = useHistory();\n  const goToGameStart = () => history.push('/game-start');\n\n  return (\n    <div className={styles.container}>\n      <img className={styles.handImage} src={hand} alt='hand' />\n      <div className={styles.finalInfo}>\n        <h1 className={styles.title}>Page not found</h1>\n        <button type='button' className={styles.goHomeButton} onClick={goToGameStart}>\n          Go Home\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './QuestionTitle.module.css';\n\nconst QuestionTitle = ({ text }) => <p className={styles.question}>{text}</p>;\n\nQuestionTitle.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n\nexport default QuestionTitle;\n","import React from 'react';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport styles from './QuestionOption.module.css';\n\nconst QuestionOption = ({ option, selectAnswer, optionState, isSelected }) => {\n  return (\n    <>\n      <svg\n        className={cx(styles.option, styles[optionState], isSelected ? styles.selected : null)}\n        onClick={() => selectAnswer(option)}\n        viewBox='0 0 405 72'\n        fill='none'\n        xmlns='http://www.w3.org/2000/svg'>\n        <path d='M388 36L405 36' />\n        <path d='M0 36L17 36' />\n        <path d='M38.7172 5.28344C40.8781 2.28016 44.3521 0.5 48.052 0.5H356.948C360.648 0.5 364.122 2.28016 366.283 5.28344L388.384 36L366.283 66.7166C364.122 69.7198 360.648 71.5 356.948 71.5H48.052C44.3521 71.5 40.8781 69.7198 38.7172 66.7166L16.616 36L38.7172 5.28344Z' />\n        <text textAnchor='start' y='40' x='50' fill='red'>\n          {option.id}\n        </text>\n        <text textAnchor='start' y='40' x='65' fill='#000' stroke='#000'>\n          {option.answerText}\n        </text>\n      </svg>\n    </>\n  );\n};\n\nQuestionOption.propTypes = {\n  option: PropTypes.shape({ answerText: PropTypes.string.isRequired, id: PropTypes.string.isRequired }).isRequired,\n  selectAnswer: PropTypes.func.isRequired,\n  isSelected: PropTypes.bool.isRequired,\n  optionState: PropTypes.string.isRequired,\n};\n\nexport default QuestionOption;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './QuestionOptions.module.css';\nimport QuestionOption from './QuestionOption/QuestionOption';\n\nconst QuestionOptions = ({ options, handleAnswerOptionClick, answerChecked }) => {\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [optionState, setOptionState] = useState('');\n\n  const selectAnswer = (option) => setSelectedAnswer(option);\n  const handleConfirmClick = () => handleAnswerOptionClick(selectedAnswer.isCorrect);\n\n  useEffect(() => setSelectedAnswer(null), [options]);\n  useEffect(() => {\n    if (!selectedAnswer) {\n      setOptionState('');\n    } else if (answerChecked) {\n      const checkedOptionState = selectedAnswer.isCorrect ? 'correct' : 'wrong';\n      setOptionState(checkedOptionState);\n    }\n  }, [answerChecked, selectedAnswer]);\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.options}>\n        {options.map((option) => (\n          <div className={styles.option} key={option.id}>\n            <QuestionOption option={option} selectAnswer={selectAnswer} isSelected={selectedAnswer?.id === option.id} optionState={optionState} />\n          </div>\n        ))}\n      </div>\n      <button type='button' className={styles.confirmButton} disabled={!selectedAnswer} onClick={handleConfirmClick}>\n        Confirm\n      </button>\n    </div>\n  );\n};\n\nQuestionOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.object).isRequired,\n  handleAnswerOptionClick: PropTypes.func.isRequired,\n  answerChecked: PropTypes.bool.isRequired,\n};\n\nexport default QuestionOptions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport styles from './MoneyCell.module.css';\n\nconst MoneyCell = ({ earned, questionState }) => {\n  return (\n    <svg className={cx(styles[questionState], styles.cell)} viewBox='0 0 376 40' xmlns='http://www.w3.org/2000/svg'>\n      <path d='M69 20H0' />\n      <path d='M376 20H307' />\n      <path\n        d='M81.4526 4.63788C83.6376 2.01596 86.8742 0.5 90.2872 0.5H285.713C289.126 0.5 292.362 2.01597 294.547 4.63788L307.349 20L294.547 35.3621C292.362 37.984 289.126 39.5 285.713 39.5H90.2872C86.8742 39.5 83.6376 37.984 81.4526 35.3621L68.6509 20L81.4526 4.63788Z'\n        fill='none'\n      />\n      <text textAnchor='middle' y='25' x='188' className={(cx(styles[questionState]), styles.text)}>\n        ${earned}\n      </text>\n    </svg>\n  );\n};\n\nMoneyCell.propTypes = {\n  earned: PropTypes.number.isRequired,\n  questionState: PropTypes.string.isRequired,\n};\n\nexport default MoneyCell;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\nimport MoneyCell from './MoneyCell/MoneyCell';\nimport styles from './EarnedMoney.module.css';\n\nconst EarnedMonney = ({ currentQuestion, costs }) => {\n  const checkAnswer = (index) => {\n    if (currentQuestion === index) {\n      return `active`;\n    }\n    if (currentQuestion > index) {\n      return `comming`;\n    }\n    return `passed`;\n  };\n\n  return (\n    <div className={styles.container}>\n      {costs.map((cell, index) => (\n        <MoneyCell key={uuidv4()} earned={cell} questionState={checkAnswer(index)} />\n      ))}\n    </div>\n  );\n};\n\nEarnedMonney.propTypes = {\n  currentQuestion: PropTypes.number.isRequired,\n  costs: PropTypes.arrayOf(PropTypes.number).isRequired,\n};\n\nexport default EarnedMonney;\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport styles from './QuestionsPage.module.css';\nimport QuestionTitle from './QuestionTitle/QuestionTitle';\nimport QuestionOptions from './QuestionOptions/QuestionOptions';\nimport EarnedMoney from './EarnedMoney/EarnedMoney';\nimport questions from '../../db/questions.json';\n\nconst QuestionsPage = () => {\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [answerChecked, setAnswerChecked] = useState(false);\n\n  const history = useHistory();\n  const goToGameOver = (score) => setTimeout(() => history.push({ pathname: '/game-over', state: { score } }), 1000);\n  const goToNextQuestion = (nextQuestion) =>\n    setTimeout(() => {\n      setCurrentQuestion(nextQuestion);\n      setAnswerChecked(false);\n    }, 1000);\n\n  const handleAnswerOptionClick = (isCorrect) => {\n    setTimeout(() => {\n      const nextQuestion = currentQuestion + 1;\n      if (nextQuestion < questions.length && isCorrect) {\n        goToNextQuestion(nextQuestion);\n      } else if (nextQuestion === questions.length) {\n        goToGameOver(questions[currentQuestion].cost);\n      } else {\n        const finalQuestionCost = currentQuestion > 0 ? questions[currentQuestion - 1].cost : 0;\n        goToGameOver(finalQuestionCost);\n      }\n      setAnswerChecked(true);\n    }, 2000);\n  };\n\n  const getCosts = () => questions.map((question) => question.cost);\n  return (\n    <div className={styles.container}>\n      <div className={styles.questionTitle}>\n        <QuestionTitle text={questions[currentQuestion].questionText} />\n      </div>\n      <div className={styles.questionOptions}>\n        <QuestionOptions\n          options={questions[currentQuestion].answerOptions}\n          handleAnswerOptionClick={handleAnswerOptionClick}\n          answerChecked={answerChecked}\n        />\n      </div>\n      <div className={styles.earnedMoney}>\n        <EarnedMoney earnedMoney={questions[currentQuestion].earnedMoney} currentQuestion={currentQuestion} costs={getCosts()} />\n      </div>\n    </div>\n  );\n};\n\nexport default QuestionsPage;\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport styles from './App.module.css';\nimport GameOver from './components/GameOver/GameOver';\nimport GameStart from './components/GameStart/GameStart';\nimport NotFound from './components/NotFound/NotFound';\nimport QuestionsPage from './components/QuestionsPage/QuestionsPage';\n\nconst App = () => {\n  return (\n    <Router>\n      <div className={styles.container}>\n        <Switch>\n          <Redirect exact from='/' to='game-start' />\n          <Route path='/game-start'>\n            <GameStart />\n          </Route>\n          <Route path='/questions-page'>\n            <QuestionsPage />\n          </Route>\n          <Route path='/game-over'>\n            <GameOver />\n          </Route>\n          <Route path='*' exact>\n            <NotFound />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}